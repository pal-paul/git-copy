name: Prepare Action for Release

on:
  pull_request:
    types: [opened, synchronize]
    branches: [master]

jobs:
  prepare-action:
    name: Build Action Binary for Release PR
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'release-please--branches--master')
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_TOKEN }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: true
          cache-dependency-path: go.sum

      - name: Run full test suite
        run: |
          echo "Running tests before building release binary..."
          go test -v ./test/...
          go test -v -race ./test/...

      - name: Build optimized action binary
        run: |
          echo "Building production-ready action binary..."
          go build -ldflags="-s -w" -o cmd/app-git-copy ./cmd
          chmod +x cmd/app-git-copy

          echo "Binary info:"
          file cmd/app-git-copy
          echo "Size: $(du -h cmd/app-git-copy | cut -f1)"

      - name: Commit binary to release PR
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Force add binary (override .gitignore)
          git add -f cmd/app-git-copy

          if git diff --staged --quiet; then
            echo "Binary already up to date"
          else
            git commit -m "ðŸ¤– Add action binary for release

            - Optimized production build
            - Built with Go $(go version | awk '{print $3}')
            - Ready for GitHub Action usage
            - Size: $(du -h cmd/app-git-copy | cut -f1)
            
            This binary will be available when users use the action."
            git push origin ${{ github.head_ref }}
            echo "âœ… Action binary added to release PR"
          fi

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ¤– **Action Binary Ready**
              
              âœ… Optimized action binary has been built and committed to this release PR
              âœ… Users will be able to use this action immediately after release
              âœ… Binary size: $(du -h cmd/app-git-copy | cut -f1)
              
              The action is ready for release! ðŸš€`
            })
