name: Build and Commit Action Binary

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build action binary'
        required: false
        default: 'false'

jobs:
  build-action:
    name: Build Action Binary for Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_TOKEN }}
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: true
          cache-dependency-path: go.sum

      - name: Run tests to ensure quality
        run: |
          go test -v ./test/...

      - name: Build optimized action binary
        run: |
          echo "Building optimized action binary for release..."
          go build -ldflags="-s -w" -o cmd/app-git-copy ./cmd
          chmod +x cmd/app-git-copy
          ls -la cmd/app-git-copy

      - name: Commit action binary for release
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Force add the binary (override .gitignore)
          git add -f cmd/app-git-copy
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸ¤– Add optimized action binary for ${{ github.ref_name }} release

            - Built with Go $(go version | awk '{print $3}')
            - Optimized with -ldflags='-s -w'
            - Ready for GitHub Action usage
            - Auto-generated for release ${{ github.ref_name }}
            
            [skip ci]"
            git push origin ${{ github.ref_name }}
            echo "âœ… Action binary committed and pushed"
          fi

      - name: Verify binary
        run: |
          echo "Binary verification:"
          file cmd/app-git-copy
          echo "Binary size: $(du -h cmd/app-git-copy | cut -f1)"
          echo "âœ… Action binary ready for release"
